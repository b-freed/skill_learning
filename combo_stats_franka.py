import numpy as np
import ipdb
import scipy.stats as st

# for partial
# results = [(1.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (0.0, 280), (0.0, 280), (2.0, 280), (2.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (2.0, 280), (2.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (2.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (2.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (2.0, 280), (0.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (2.0, 280), (2.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (2.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (2.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (2.0, 280), (2.0, 280), (0.0, 280), (2.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (2.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (2.0, 280), (1.0, 280), (0.0, 280), (2.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (0.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (2.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (2.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (2.0, 280), (0.0, 280), (2.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (2.0, 280), (2.0, 280), (0.0, 280), (2.0, 280), (2.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (2.0, 280), (0.0, 280), (2.0, 280), (2.0, 280), (2.0, 280), (2.0, 280), (1.0, 280), (2.0, 280), (1.0, 280), (2.0, 280), (2.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (2.0, 280), (1.0, 280), (2.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (1.0, 280), (0.0, 280)]
results = [(0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (1.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280), (0.0, 280)]

r_list = [100*x[0]/4 for x in results]
n = len(r_list)

# mean_r = np.mean(r_list)
# std_r = np.std(r_list)
# ci = 
mean = np.mean(r_list)
ci = st.norm.interval(alpha=0.95, loc=mean, scale=st.sem(r_list))

print('$',mean, ' \pm ', ci[1] - mean,'$')


